{
  "name": "node-notifier",
  "version": "4.2.1",
  "description": "A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:mikaelbr/node-notifier.git"
  },
  "keywords": [
    "notification center",
    "mac os x 10.8",
    "notify",
    "terminal-notifier",
    "notify-send",
    "growl",
    "windows 8 notification",
    "toaster",
    "notification"
  ],
  "author": {
    "name": "Mikael Brevik"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "^1.21.4",
    "should": "^4.0.4"
  },
  "dependencies": {
    "cli-usage": "^0.1.1",
    "clone": "^0.1.18",
    "growly": "^1.2.0",
    "minimist": "^1.1.1",
    "semver": "^4.0.3",
    "shellwords": "^0.1.0",
    "which": "^1.0.5"
  },
  "bin": {
    "notify": "./bin.js"
  },
  "readme": "# node-notifier [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\nA Node.js module for sending cross platform system notification. Using\nNotification Center for Mac, notify-osd for Linux, Toasters for\nWindows 8, or lovely taskbar Balloons for earlier Windows versions. If none of\nthese requirements are met, be it older version of Windows or OS X,\nGrowl is used.\n\n![Mac Screenshot](https://github.com/mikaelbr/node-notifier/blob/master/example/mac.png)\n![Native Windows Screenshot](https://github.com/mikaelbr/node-notifier/blob/master/example/windows.png)\n![Growl Screenshot](https://github.com/mikaelbr/node-notifier/blob/master/example/growl.png)\n\n## Easy Usage\n\nShow native notifications on Mac, Windows, Linux or using Growl!\n\n```javascript\nvar notifier = require('node-notifier');\nnotifier.notify({\n  'title': 'My notification',\n  'message': 'Hello, there!'\n});\n```\n\n## Requirements\n- **Mac OS X**: >= 10.8 or Growl if earlier.\n- **Linux**: notify-osd installed (Ubuntu should have this by default)\n- **Windows**: >= 8, task bar balloon if earlier or Growl if that is installed.\n- **General Fallback**: Growl\n\nGrowl takes precedence over Windows balloons.\n\nSee [documentation and flow chart for reporter choice](./DECISION_FLOW.md)\n\n## Install\n```\n$ npm install --save node-notifier\n```\n\n## Cross-Platform Advanced Usage\n\nStandard usage, with cross-platform fallbacks as defined in the\n[reporter flow chart](./DECISION_FLOW.md). All of the options\nbelow will work in a way or another on all platforms.\n\n```javascript\nvar notifier = require('node-notifier');\nvar path = require('path');\n\nnotifier.notify({\n  title: 'My awesome title',\n  message: 'Hello from node, Mr. User!',\n  icon: path.join(__dirname, 'coulson.jpg'), // absolute path (not balloons)\n  sound: true, // Only Notification Center or Windows Toasters\n  wait: true // wait with callback until user action is taken on notification\n}, function (err, response) {\n  // response is response from notification\n});\n\nnotifier.on('click', function (notifierObject, options) {\n  // Happens if `wait: true` and user clicks notification\n});\n\nnotifier.on('timeout', function (notifierObject, options) {\n  // Happens if `wait: true` and notification closes\n});\n```\n\nYou can also specify what reporter you want to use if you\nwant to customize it or have more specific options per system.\nSee documentation for each reporter below.\n\nExample:\n```javascript\nvar NotificationCenter = require('node-notifier/notifiers/notificationcenter');\nnew NotificationCenter(options).notify();\n\nvar NotifySend = require('node-notifier/notifiers/notifysend');\nnew NotifySend(options).notify();\n\nvar WindowsToaster = require('node-notifier/notifiers/toaster');\nnew WindowsToaster(options).notify();\n\nvar Growl = require('node-notifier/notifiers/growl');\nnew Growl(options).notify();\n\nvar WindowsBalloon = require('node-notifier/notifiers/balloon');\nnew WindowsBalloon(options).notify();\n\n```\n\n\nOr if you are using several (or you are lazy):\n(note: technically, this takes longer to require)\n\n```javascript\nvar nn = require('node-notifier');\n\nnew nn.NotificationCenter(options).notify();\nnew nn.NotifySend(options).notify();\nnew nn.WindowsToaster(options).notify(options);\nnew nn.WindowsBalloon(options).notify(options);\nnew nn.Growl(options).notify(options);\n```\n\n\n## Documentation\n\n* [Notification Center documentation](#usage-notificationcenter)\n* [Windows Toaster documentation](#usage-windowstoaster)\n* [Windows Balloon documentation](#usage-windowsballoon)\n* [Growl documentation](#usage-growl)\n* [Notify-send documentation](#usage-notifysend)\n\n\n### Usage NotificationCenter\n\nSame usage and parameter setup as [terminal-notifier](https://github.com/alloy/terminal-notifier).\n\nNative Notification Center requires Mac OS X version 10.8 or higher. If you have\nearlier versions, Growl will be the fallback. If Growl isn't installed, an error\nwill be returned in the callback.\n\n\n#### Example\n\nIt is a wrapper around [terminal-notifier](https://github.com/alloy/terminal-notifier), and you can\ndo all terminal-notifier can do through properties to the `notify` method. E.g.\nif `terminal-notifier` say `-message`, you can do `{message: 'Foo'}`, or\nif `terminal-notifier` say `-list ALL` you can do `{list: 'ALL'}`. Notification\nis the primary focus for this module, so listing and activating do work,\nbut isn't documented.\n\n### All notification options with their defaults:\n\n```javascript\nvar NotificationCenter = require('node-notifier').NotificationCenter;\n\nvar notifier = new Notification({\n  withFallback: false, // use Growl if <= 10.8?\n  customPath: void 0 // Relative path if you want to use your fork of terminal-notifier\n});\n\nnotifier.notify({\n  'title': void 0,\n  'subtitle': void 0,\n  'message': void 0,\n  'sound': false, // Case Sensitive string of sound file (see below)\n  'icon': 'Terminal Icon', // Set icon? (Absolute path to image)\n  'contentImage': void 0, // Attach image? (Absolute path)\n  'open': void 0, // URL to open on click\n  'wait': false // if wait for notification to end\n}, function(error, response) {\n  console.log(response);\n});\n```\n\n**For Mac OS notifications, icon and contentImage requires OS X 10.9.**\n\nSound can be one of these: `Basso`, `Blow`, `Bottle`, `Frog`, `Funk`, `Glass`,\n`Hero`, `Morse`, `Ping`, `Pop`, `Purr`, `Sosumi`, `Submarine`, `Tink`. If\nsound is simply `true`, `Bottle` is used.\n\nSee [specific Notification Center example](./example/advanced.js).\n\n### Usage WindowsToaster\n\n**Note:** There are some limitations for images in native Windows 8 notifications:\nThe image must be a PNG image, and cannot be over 1024x1024 px, or over over 200Kb.\nYou also need to specify the image by using absolute path. These limitations are\ndue to the Toast notification system. A good tip is to use something like\n`path.join` or `path.delimiter` to have cross-platform pathing.\n\n[toaster](https://github.com/nels-o/toaster) is used to get native Windows Toasts!\n\n```javascript\nvar WindowsToaster = require('node-notifier').WindowsToaster;\n\nvar notifier = new WindowsToaster({\n  withFallback: false, // Fallback to Growl or Balloons?\n  customPath: void 0 // Relative path if you want to use your fork of toast.exe\n});\n\nnotifier.notify({\n  title: void 0,\n  message: void 0,\n  icon: void 0, // absolute path to an icon\n  sound: false, // true | false.\n  wait: false, // if wait for notification to end\n}, function(error, response) {\n  console.log(response);\n});\n```\n\n### Usage Growl\n\n```javascript\nvar Growl = require('node-notifier').Growl;\n\nvar notifier = new Growl({\n  name: 'Growl Name Used', // Defaults as 'Node'\n  host: 'localhost',\n  port: 23053\n});\n\nnotifier.notify({\n  title: 'Foo',\n  message: 'Hello World',\n  icon: fs.readFileSync(__dirname + \"/coulson.jpg\"),\n  wait: false, // if wait for user interaction\n\n  // and other growl options like sticky etc.\n  sticky: false,\n  label: void 0,\n  priority: void 0\n});\n```\n\nSee more information about using\n[growly](https://github.com/theabraham/growly/).\n\n### Usage WindowsBalloon\n\nFor earlier Windows versions, the taskbar balloons are used (unless\nfallback is activated and Growl is running). For balloons a great\nproject called [notifu](http://www.paralint.com/projects/notifu/) is used.\n\n```javascript\nvar WindowsBalloon = require('node-notifier').WindowsBalloon;\n\nvar notifier = new WindowsBalloon({\n  withFallback: false, // Try Windows 8 and Growl first?\n  customPath: void 0 // Relative path if you want to use your fork of notifu\n});\n\nnotifier.notify({\n  title: void 0,\n  message: void 0,\n  sound: false, // true | false.\n  time: 5000, // How long to show balloons in ms\n  wait: false, // if wait for notification to end\n}, function(error, response) {\n  console.log(response);\n});\n```\n\nSee full usage on the [project homepage:\nnotifu](http://www.paralint.com/projects/notifu/).\n\n### Usage NotifySend\n\nNote: notify-send doesn't support the wait flag.\n\n```javascript\nvar NotifySend = require('node-notifier').NotifySend;\n\nvar notifier = new NotifySend();\n\nnotifier.notify({\n  title: 'Foo',\n  message: 'Hello World',\n  icon: __dirname + \"/coulson.jpg\",\n\n  // .. and other notify-send flags:\n  urgency: void 0,\n  time: void 0,\n  category: void 0,\n  hint: void 0,\n});\n```\n\nSee flags and options [on the man pages](http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html)\n\n## CLI\n\nYou can also use node-notifier as a CLI (as of `v4.2.0`).\n\n```shell\n$ notify -h\n\n# notify\n## Options\n   * --help (alias -h)\n   * --title (alias -t)\n   * --subtitle (alias -st)\n   * --message (alias -m)\n   * --icon (alias -i)\n   * --sound (alias -s)\n   * --open (alias -o)\n\n## Example\n\n   $ notify -t \"Hello\" -m \"My Message\" -s --open http://github.com\n   $ notify -t \"Agent Coulson\" --icon https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/coulson.jpg\n   $ notify -m \"My Message\" -s Glass\n```\n\n## Thanks to OSS\n\nA very special thanks to all the modules `node-notifier` uses.\n* [terminal-notifier](https://github.com/alloy/terminal-notifier)\n* [toaster](https://github.com/nels-o/toaster)\n* [notifu](http://www.paralint.com/projects/notifu/)\n* [growly](https://github.com/theabraham/growly/)\n\n[![NPM downloads][npm-downloads]][npm-url]\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/node-notifier\n[npm-image]: http://img.shields.io/npm/v/node-notifier.svg?style=flat\n[npm-downloads]: http://img.shields.io/npm/dm/node-notifier.svg?style=flat\n\n[travis-url]: http://travis-ci.org/mikaelbr/node-notifier\n[travis-image]: http://img.shields.io/travis/mikaelbr/node-notifier.svg?style=flat\n\n[depstat-url]: https://gemnasium.com/mikaelbr/node-notifier\n[depstat-image]: http://img.shields.io/gemnasium/mikaelbr/node-notifier.svg?style=flat\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mikaelbr/node-notifier/issues"
  },
  "_id": "node-notifier@4.2.1",
  "dist": {
    "shasum": "5945eca04d92d1974cf9c2e6c0fac9daab1b0a98"
  },
  "_from": "node-notifier@^4.1.0",
  "_resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-4.2.1.tgz"
}
