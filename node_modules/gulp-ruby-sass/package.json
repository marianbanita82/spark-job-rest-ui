{
  "name": "gulp-ruby-sass",
  "version": "1.0.1",
  "description": "Compile Sass to CSS with Ruby Sass",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "sindresorhus/gulp-ruby-sass"
  },
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "http://sindresorhus.com"
    },
    {
      "name": "Rob Wierzbowski",
      "email": "robwierzbowski@gmail.com",
      "url": "http://robwierzbowski.com"
    }
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "scss",
    "sass",
    "css",
    "compile",
    "preprocessor",
    "style",
    "ruby",
    "source-map",
    "source-maps",
    "sourcemap",
    "sourcemaps"
  ],
  "dependencies": {
    "convert-source-map": "^1.0.0",
    "dargs": "^2.0.3",
    "each-async": "^1.0.0",
    "glob": "^4.0.2",
    "gulp-util": "^3.0.0",
    "mkdirp": "^0.5.0",
    "object-assign": "^2.0.0",
    "rimraf": "^2.2.8",
    "slash": "^1.0.0",
    "vinyl-fs": "^1.0.0",
    "win-spawn": "^2.0.0",
    "vinyl": "^0.4.3"
  },
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-sourcemaps": "^1.2.7",
    "mocha": "*"
  },
  "readme": "# gulp-ruby-sass [![Build Status](https://travis-ci.org/sindresorhus/gulp-ruby-sass.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-ruby-sass)\n\nCompiles Sass with [the Sass gem](http://sass-lang.com/install).  \nTo compile Sass with [libsass](http://libsass.org/), use [gulp-sass](https://github.com/dlmanning/gulp-sass)\n\n## Install\n\nYou must have [Sass >= 3.4](http://sass-lang.com/install).\n\n```sh\n$ npm install --save-dev gulp-ruby-sass\n```\n\n## Important!\n\n- gulp-ruby-sass is a gulp source adapter. Use it instead of `gulp.src`.\n- gulp-ruby-sass doesn't support globs yet, only single files or directories. Just like Sass.\n- gulp-ruby-sass doesn't support managing errors with plumber yet ([issue](https://github.com/sindresorhus/gulp-ruby-sass/issues/164)).\n- gulp-ruby-sass doesn't support incremental builds yet ([issue](https://github.com/sindresorhus/gulp-ruby-sass/issues/111)).\n- gulp-ruby-sass doesn't alter Sass's output in any way. Problems with Sass output should be reported to the [Sass issue tracker](https://github.com/sass/sass/issues).\n\n## Usage\n\nUse gulp-ruby-sass instead of `gulp.src` to compile a file or directory.  \n\n```js\nvar gulp = require('gulp');\nvar sass = require('gulp-ruby-sass');\n\ngulp.task('sass', function() {\n\treturn sass('source/') \n\t.on('error', function (err) {\n\t  console.error('Error!', err.message);\n   })\n\t.pipe(gulp.dest('result'));\n});\n```\n\n#### Recompiling on changes\n\nUse [gulp-watch](https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpwatchglob--opts-tasks-or-gulpwatchglob--opts-cb) to automatically recompile your files on change.\n\n#### Handling errors\n\nHandle Sass errors with an `on('error', cb)` listener. gulp-ruby-sass throws errors like a gulp plugin, but streams the erroring files so you can see Sass errors in your browser too.\n\n### Plugin options\n\n#### verbose\n\nType: `Boolean`  \nDefault: `false`  \n\nGives some extra information for debugging, including the actual spawned Sass command.\n\n#### bundleExec\n\nType: `Boolean`  \nDefault: `false`\n\nRun `sass` with [bundle exec](http://gembundler.com/man/bundle-exec.1.html).\n\n#### sourcemap\n\nType: `Boolean`  \nDefault: `false`  \n\nRequires Sass `>= 3.4` and [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps).  \n\n*Inline sourcemaps* are recommended, as they \"just work\".\n\n```js\nvar gulp = require('gulp');\nvar sass = require('gulp-ruby-sass');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('sass', function() {\n\treturn sass('source', { sourcemap: true })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\n\t.pipe(sourcemaps.write())\n\n\t.pipe(gulp.dest('result'));\n});\n```\n\n*File sourcemaps* require you to serve the sourcemap location so the browser can read the files. See the [gulp-sourcemaps readme](https://github.com/floridoo/gulp-sourcemaps) for more info.\n\n```js\ngulp.task('sass', function() {\n\treturn sass('source', { sourcemap: true })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\n\t.pipe(sourcemaps.write('maps', {\n\t\tincludeContent: false,\n\t\tsourceRoot: '/source'\n\t}))\n\n\t.pipe(gulp.dest('result'));\n});\n```\n\n#### container\n\nType: `String`  \nDefault: `gulp-ruby-sass`\n\nName of the temporary directory used to process files. If you're running multiple instances of gulp-ruby-sass at once, specify a separate container for each task to avoid files mixing together.\n\n```js\nvar gulp = require('gulp');\nvar sass = require('gulp-ruby-sass');\n\ngulp.task('sass-app', function() {\n\treturn sass('source/app.scss', { container: 'gulp-ruby-sass-app' })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\t.pipe(gulp.dest('result/app'));\n});\n\ngulp.task('sass-site', function() {\n\treturn sass('source/site.scss', { container: 'gulp-ruby-sass-site' })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\t.pipe(gulp.dest('result/site'));\n});\n\ngulp.task('sass', ['sass-app', 'sass-site']);\n```\n\n### Sass options\n\nAny other options are passed directly to the Sass executable. gulp options are camelCase versions of Sass's dashed-case options.\n\nThe docs below list common options for convenience. Run `sass -h` for the complete list.\n\n#### loadPath\n\nType: `String`  \nDefault: `false`\n\nSpecify a Sass import path.\n\n#### require\n\nType: `String`  \nDefault: `false`\n\nRequire a Ruby library before running Sass.\n\n#### compass\n\nType: `Boolean`  \nDefault: `false`\n\nMake Compass imports available and load project configuration.\n\n#### style\n\nType: `String`  \nDefault: `nested`\n\nOutput style. Can be nested (default), compact, compressed, or expanded.\n\n#### force\n\nType: `Boolean`  \nDefault: `false`\n\nRecompile every Sass file, even if the CSS file is newer.\n\n#### stopOnError\n\nType: `Boolean`  \nDefault: `false`\n\nIf a file fails to compile, exit immediately.\n\n#### defaultEncoding\n\nType: `String`  \nDefault: `false`\n\nSpecify the default encoding for input files.\n\n#### unixNewlines\n\nType: `Boolean`  \nDefault: `false`\n\nUse Unix-style newlines in written files on non-Unix systems. Always true on Unix.\n\n#### debugInfo\n\nType: `Boolean`  \nDefault: `false`\n\nEmit output that can be used by the FireSass Firebug plugin.\n\n#### lineNumbers\n\nType: `Boolean`  \nDefault: `false`\n\nEmit comments in the generated CSS indicating the corresponding source line.\n\n#### check\n\nType: `Boolean`  \nDefault: `false`\n\nJust check syntax, don't evaluate.\n\n#### precision \n\nType: `Number`  \nDefault: `5`\n\nHow many digits of precision to use when outputting decimal numbers.\n\n#### cacheLocation\n\nType: `String`  \nDefault: `false`\n\nThe path to save parsed Sass files. Defaults to .sass-cache.\n\n#### noCache\n\nType: `Boolean`  \nDefault: `false`\n\nDon't cache parsed Sass files.\n\n#### trace\n\nType: `Boolean`  \nDefault: `false`\n\nShow a full Ruby stack trace on error.\n\n#### quiet\n\nType: `Boolean`  \nDefault: `false`\n\nSilence warnings and status messages during compilation.\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "gulp-ruby-sass@1.0.1",
  "dist": {
    "shasum": "24ee5c7a80b8a33c4983999b001a4a8dc01940b2"
  },
  "_from": "gulp-ruby-sass@",
  "_resolved": "https://registry.npmjs.org/gulp-ruby-sass/-/gulp-ruby-sass-1.0.1.tgz"
}
